         TITLE 'IGENQSRT - SORT THE TABLE BY QUICK SORT ALGORITHM'      00010000
**<DOC-ON>*****************************************************         00020000
*                                                                       00030000
* ROUTINE: IGENQSRT - QUICK SORT                                        00040000
*                                                                       00050000
* DESCRIPTION:                                                          00060000
*                                                                       00070000
*    THIS ROUTINE PERFORMS THE QUICK SORT.                              00080000
*                                                                       00090000
* ON ENTRY:                                                             00100000
*                                                                       00110000
*      R1  CONTAINS THE ADDRESS OF A PARAMETER LIST CONSTRUCTED         00120000
*           AS FOLLOWS:                                                 00130000
*             +00 - TABLE ADDRESS                                       00140000
*             +04 - TABLE SLOT #                                        00150000
*             +08 - LENGTH OF EACH TABLE SLOT                           00160000
*             +12 - FUNCTION ADDRESS FOR THE SORTING KEY                00170000
*                                                                       00180000
* ON EXIT:                                                              00190000
*                                                                       00200000
*      NONE.                                                            00210000
*                                                                       00220000
**<DOC-OFF>****************************************************         00230000
         EQUS  ,                                                        00240000
         EJECT ,                                                        00250000
                                                                        00260000
IGENQSRT CSECT ,                                                        00270000
IGENQSRT AMODE 31                                                       00280000
IGENQSRT RMODE ANY                                                      00290000
                                                                        00300000
         BAKR  R14,0             STACK CURRENT STATE                    00310000
         LR    R12,R15                                                  00320000
         USING IGENQSRT,R12                                             00330000
         LM    R3,R4,4(R1)                                              00340000
         BCTR  R3,0                                                     00350000
         MR    R2,R4             R4-> SLOT LENGTH                       00360000
         L     R6,0(R1)                                                 00370000
         AR    R6,R3             R6-> LAST TABLE SLOT                   00380000
         L     R3,12(R1)                                                00390000
         L     R3,0(R3)          R3-> FUNCTION FOR SORTING KEY          00400000
         L     R5,0(R1)          R5-> 1ST TABLE SLOT                    00410000
         SR    R9,R9             R9-> BAKR COUNT                        00420000
         BAS   R14,QSORT                                                00430000
         PR ,                                                           00440000
                                                                        00450000
         EJECT ,                                                        00460000
**<DOC-ON>*****************************************************         00470000
*                                                                       00480000
* WORKING REGISTORS:                                                    00490000
*                                                                       00500000
*        R3   - FUNCTION POINTER FOR THE KEY                            00510000
*        R4   - TABLE ENTRY LENGTH                                      00520000
*        R5   - LOWER BOUND                                             00530000
*        R6   - HIGHER BOUND                                            00540000
*                                                                       00550000
**<DOC-OFF>****************************************************         00560000
QSORT    DS    0H                                                       00570000
         BAKR  R14,0             STACK CURRENT STATE                    00580000
                                                                        00590000
         CR    R5,R6                                                    00600000
         BNL   QSEXIT            IF LOW BOUND >= HIGH BOUND, EXIT       00610000
                                                                        00620000
         LA    R9,1(R9)                                                 00630000
         C     R9,=F'80'          BAKR COUNT REACH LIMIT?               00640000
         BL    QSORTGO                                                  00650000
                                                                        00660000
         BAS   R14,BSORT         START DOING BUBBLE SORT                00670000
         B     QSEXIT                                                   00680000
                                                                        00690000
QSORTGO  DS    0H                CONTINUE TO DO QUICK SORT              00700000
         BAS   R14,SPLIT                                                00710000
         LR    R7,R15            SAVE SPLIT POINT                       00720000
         LR    R8,R6             SAVE UPPER BOUND                       00730000
         LR    R6,R7                                                    00740000
         SR    R6,R4             SPLIT - 1 AS UPPER BOUND               00750000
         BAS   R14,QSORT         PROCESS LEFT SUBTABLE                  00760000
                                                                        00770000
         LR    R5,R7             RETRIEVE SPLIT POINT                   00780000
         AR    R5,R4             SPLIT + 1 AS LOWER BOUND               00790000
         LR    R6,R8             RETRIEVE UPPER BOUND                   00800000
         BAS   R14,QSORT         PROCESS RIGHT SUBTABLE                 00810000
                                                                        00820000
QSEXIT   DS    0H                                                       00830000
         PR    ,                 UNSTACK A LEVEL                        00840000
                                                                        00850000
         EJECT ,                                                        00860000
***************************************************************         00870000
*                                                                       00880000
*   SPLIT- CALLED BY QSORT TO SPLIT TABLE INTO TWO SUBTABLES            00890000
*                                                                       00900000
*   ON ENTRY :                                                          00910000
*        R3   - FUNCTION POINTER FOR THE KEY                            00920000
*        R4   - TABLE ENTRY LENGTH                                      00930000
*        R5   - LOWER BOUND (LB)                                        00940000
*        R6   - UPPER BOUND (UB)                                        00950000
*                                                                       00960000
*   WORKING REGISTOR :                                                  00970000
*        R7  - M                                                        00980000
*        R8  - J                                                        00990000
*                                                                       01000000
*   AT EXIT :                                                           01010000
*        R15  - SPLIT POINT                                             01020000
*                                                                       01030000
***************************************************************         01040000
SPLIT    DS    0H                                                       01050000
         BAKR  R14,0             STACK CURRENT STATE                    01060000
                                                                        01070000
         LR    R7,R5             INITIALIZE M ( M = LB )                01080000
         LR    R8,R6             INITIALIZE J                           01090000
         AR    R8,R4             J = UB + 1                             01100000
                                                                        01110000
SPLOOP1  DS    0H                COMPARE TO THE LEFT                    01120000
         CR    R7,R6             M REACH LIMIT?                         01130000
         BNL   SPLOOP2           M REACH UPPER BOUND                    01140000
         AR    R7,R4             M = M + 1                              01150000
         LR    R1,R5                                                    01160000
         LR    R2,R7                                                    01170000
         LR    R15,R3                                                   01180000
         BASR  R14,R15           COMPARE TARGET WITH M                  01190000
         LTR   R15,R15                                                  01200000
         BP    SPLOOP1           COMPARE TO THE RIGHT                   01210000
                                                                        01220000
SPLOOP2  DS    0H                                                       01230000
         CR    R8,R5             J REACH LIMIT?                         01240000
         BNH   SWAPGO            J REACH LOWER BOUND                    01250000
         SR    R8,R4             J = J - 1                              01260000
         LR    R1,R5                                                    01270000
         LR    R2,R8                                                    01280000
         LR    R15,R3                                                   01290000
         BASR  R14,R15           COMPARE TARGET WITH M                  01300000
         LTR   R15,R15                                                  01310000
         BM    SPLOOP2                                                  01320000
                                                                        01330000
SWAPGO   DS    0H                                                       01340000
         CR    R7,R8             J < M ?                                01350000
         BNL   DONE              DONE IF J >= M                         01360000
         LR    R1,R7             SWAP ADDRESS1                          01370000
         LR    R2,R8             SWAP ADDRESS2                          01380000
         BAS   R14,SWAP                                                 01390000
         B     SPLOOP1                                                  01400000
                                                                        01410000
DONE     DS    0H                SWAP TARGET WITH J                     01420000
         LR    R1,R5             SWAP ADDRESS1                          01430000
         LR    R2,R8             SWAP ADDRESS2                          01440000
         BAS   R14,SWAP                                                 01450000
         LR    R15,R8            RETURN SPLIT POINT                     01460000
                                                                        01470000
         PR    ,                 UNSTACK A LEVEL                        01480000
                                                                        01490000
***************************************************************         01500000
*                                                                       01510000
*   SWAP - USE XC TO PERFORM THE SWAPING                                01520000
*                                                                       01530000
*   ON ENTRY :                                                          01540000
*        R1   - ADDRESS 1                                               01550000
*        R2   - ADDRESS 2                                               01560000
*        R4   - LENGTH FOR SWAPING                                      01570000
*                                                                       01580000
***************************************************************         01590000
SWAP     DS    0H                                                       01600000
         BAKR  R14,0             STACK CURRENT STATE                    01610000
         CR    R1,R2             NO SWAP IF SAME                        01620000
         BE    SWEXIT                                                   01630000
                                                                        01640000
         BCTR  R4,0                                                     01650000
         L     R3,=F'256'                                               01660000
         L     R5,=F'255'                                               01670000
                                                                        01680000
SWLOOP   DS    0H                                                       01690000
         CR    R4,R5             LAST PIECE TO SWAP ?                   01700000
         BNH   SWAPLAST                                                 01710000
         EX    R5,STEP1          SWAP THE PIECE IN 256-BYTE UNIT        01720000
         EX    R5,STEP2                                                 01730000
         EX    R5,STEP1                                                 01740000
                                                                        01750000
         AR    R1,R3             ADVANCE TO NEXT PIECE TO SWAP          01760000
         AR    R2,R3             ADVANCE TO NEXT PIECE TO SWAP          01770000
         SR    R4,R3             DECREMENT LENGTH TO SWAP               01780000
         B     SWLOOP                                                   01790000
                                                                        01800000
SWAPLAST DS    0H                                                       01810000
         EX    R4,STEP1          SWAP THE REMAINING                     01820000
         EX    R4,STEP2                                                 01830000
         EX    R4,STEP1                                                 01840000
                                                                        01850000
SWEXIT   DS    0H                                                       01860000
         PR    ,                 RETURN                                 01870000
                                                                        01880000
STEP1    XC    0(0,R2),0(R1)                                            01890000
STEP2    XC    0(0,R1),0(R2)                                            01900000
                                                                        01910000
**<DOC-ON>*****************************************************         01920000
*                                                                       01930000
* ROUTINE: IBSORT - ASSEMBLY VESION OF BUBBLE SORT                      01940000
*                                                                       01950000
* DESCRIPTION:                                                          01960000
*                                                                       01970000
*                                                                       01980000
*                                                                       01990000
* ON ENTRY:                                                             02000000
*                                                                       02010000
*    R1 CONTAINS THE ADDRESS OF $NAVPARM, DESCRIBING THE VDB            02020000
*       +0 -  ADDRESS OF THE TABLE TO BE SORTED                         02030000
*       +4 -  NUMBER OF TABLE ENTRY                                     02040000
*       +8 -  LENGTH FOR EACH ENTRY                                     02050000
*       +12 - FUNCTION ADDRESS                                          02060000
*                                                                       02070000
*                                                                       02080000
* ON EXIT:                                                              02090000
*                                                                       02100000
*       RC00 - NAVIGATION COMPLETED                                     02110000
*                                                                       02120000
*              RSN00 - TERMINAL STATE IS NOT EXCEPTIONAL                02130000
*              RSN04 - TERMINAL STATE IS EXCEPTION STATE                02140000
*                                                                       02150000
*       RC04 - A REQUIRED HOST APPLICATION IS NOT DEFINED               02160000
*                                                                       02170000
*                                                                       02180000
**<DOC-OFF>****************************************************         02190000
         EJECT                                                          02200000
BSORT    DS    0H                                                       02210000
         BAKR  R14,0             STACK CURRENT STATE                    02220000
                                                                        02230000
         LA    R10,1              INITIALIZE CHANGE                     02240000
         LR    R8,R6                                                    02250000
         AR    R8,R4              INITIALIZE I                          02260000
                                                                        02270000
LOOP1    DS    0H                                                       02280000
         CR    R8,R5                                                    02290000
         BNH   BEXIT                                                    02300000
         SR    R8,R4              I = I - 1                             02310000
         LTR   R10,R10            NO CHANGE ?                           02320000
         BZ    BEXIT                                                    02330000
         SR    R10,R10            MARK AS NO CHANGE                     02340000
         LR    R1,R5                                                    02350000
         SR    R1,R4              INITIALIZE J                          02360000
         LR    R2,R5              INITIALIZE J+1                        02370000
                                                                        02380000
LOOP2    DS    0H                                                       02390000
         CR    R2,R8              R8 IS THE LIMIT IN LOOP2              02400000
         BNL   LOOP1                                                    02410000
         AR    R1,R4              J = J + 1                             02420000
         AR    R2,R4                                                    02430000
         LR    R15,R3                                                   02440000
         BASR  R14,R3                                                   02450000
         LTR   R15,R15                                                  02460000
         BNP   LOOP2                                                    02470000
         BAS   R14,SWAP           SWAP                                  02480000
         LA    R10,1              MARK CHANGE                           02490000
         B     LOOP2                                                    02500000
                                                                        02510000
BEXIT    PR    ,                                                        02520000
                                                                        02530000
***************************************************************         02540000
*                                                                       02550000
*  LITERALS, CONSTANTS, AND MAPPINGS                                    02560000
*                                                                       02570000
***************************************************************         02580000
         LTORG ,                                                        02590000
                                                                        02600000
         PRINT NOGEN                                                    02610000
         ICVT  ,                                                        02620000
         ITASK ,                                                        02630000
         END   ,                                                        02640000
