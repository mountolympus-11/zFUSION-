IDSALUSZ TITLE 'DATASPACE SVCS - SELECT ALU SIZE'                       00010001
**<DOC-ON>*****************************************************         00020001
*                                                                       00030001
* ROUTINE:  IDSALUSZ - SELECT ALU SIZE                                  00040001
*                                                                       00050001
* DESCRIPTION:                                                          00060001
*                                                                       00070001
*    THIS ROUTINE COMPUTES THE SIZE OF THE OBJECT SPACE                 00080001
*    ALLOCATION UNIT (ALU), OPTIONALLY BASED UPON AN OPTIMUM            00090001
*    ALU SIZE PROPOSED BY THE CALLER.  THE ALU SIZE SELECTED            00100001
*    IS ALWAYS AN EXPONENTIAL VALUE OF TWO (BYTES) THAT IS NO           00110001
*    SMALLER THAN THE PROPOSED VALUE.                                   00120001
*                                                                       00130001
*                                                                       00140001
* ON ENTRY:                                                             00150001
*                                                                       00160001
*    R1 CONTAINS AN ALLOCATION UNIT SIZE PROPOSAL OR ZERO               00170001
*                                                                       00180001
*                                                                       00190001
* ON EXIT:                                                              00200001
*                                                                       00210001
*    R15 - ALU SIZE                                                     00220001
*                                                                       00230001
*    R1  - THE VALUE N, WHERE 2**N IS EQUAL TO THE SIZE OF THE          00240001
*          ALLOCATION UNIT.  THIS VALUE IS CONVENIENT FOR USE           00250001
*          IN SHIFT INSTRUCTIONS USED TO CONVERT #-OF-BYTES TO          00260001
*          #-OF-ALU'S, ETC.                                             00270001
*                                                                       00280001
*                                                                       00290001
* AMODE:   ANY                                                          00300001
* RMODE:   ANY                                                          00310001
* ASCMODE: ANY                                                          00320002
*                                                                       00330001
**<DOC-OFF>****************************************************         00340001
                                                                        00350001
         EJECT                                                          00360001
         SPCEQUS  ,                                                     00370001
                                                                        00380001
         EJECT                                                          00390001
         EQUS  ,                                                        00400001
                                                                        00410001
         EJECT                                                          00420001
IDSALUSZ @ENTER ,                                                       00430001
                                                                        00440001
         LTR   R2,R1              PROPOSAL PROVIDED?                    00450001
         BP    *+8                ACCEPT CANDIDATE VALUE                00460001
         L     R1,=A(#SPC_ALU_DEFLT) SELECT DEFAULT ALU SIZE            00470001
                                                                        00480001
         BCTR  R1,0                  PROPOSAL USED AS LOOP LIMIT        00490001
         L     R0,=A(#SPC_ALU_MIN)   MINIMUM ALU SIZE                   00500001
         BXLE  R0,R0,*            COMPUTE NEXT HIGHER POWER OF 2        00510001
         LR    R15,R0             R15 <== ALU SIZE                      00520001
                                                                        00530001
         SR    R1,R1              INITIALIZE ZERO BIT ACCUMULATOR       00540001
         LR    R2,R15             MODIFIABLE COPY OF ALU SIZE           00550001
                                                                        00560002
EXPLOOP  DS    0H                 SHIFT UNTIL SOLE BIT VANISHES         00570001
         SRA   R2,1               WALK BIT RIGHT                        00580001
         BZ    RET                DONE                                  00590001
         LA    R1,1(,R1)          ACCOUNT FOR SHIFTED ZERO              00600001
         B     EXPLOOP            BIT STILL OUT THERE                   00610001
                                                                        00620001
RET      DS    0H                                                       00630001
         @EXIT ,                                                        00640001
                                                                        00650001
*--------------------------------------------------------------         00660001
*   LOCAL READ ONLY DATA AREAS, ETC.                                    00670001
*--------------------------------------------------------------         00680001
         LTORG ,                                                        00690001
         END                                                            00700001
