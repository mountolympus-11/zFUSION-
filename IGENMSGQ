IGENMSGQ TITLE '- INSERT MESSAGE IN COLLECTOR MESSAGE QUEUE'            00010000
**<DOC-ON>*****************************************************         00020000
*                                                                       00030000
* ROUTINE: IGENMSGQ - Insert message in collector message queue         00040000
*                                                                       00050000
* DESCRIPTION:                                                          00060000
*                                                                       00070000
*    This routine is used to collect messages generated by              00080000
*    various routines via the $MSG facility into a single               00090000
*    message queue managed in STGGET storage.  This allows              00100000
*    a set of routines to generate messages independently               00110000
*    and without regard for the aggregate space requirement             00120000
*    that would be imposed if all routines append their msgs            00130000
*    in a single, contiguous storage area managed by $MSG.              00140000
*                                                                       00150000
*    This routine implements the $ENQMSG service. The $FREMSG           00160000
*    service is used to release all storage occupied by msgs            00170000
*    collected by $ENQMSG.                                              00180000
*                                                                       00190000
*    Messages may be copied in either FIFO or LIFO sequence.            00200000
*    The entire message collector queue is inserted either at           00210000
*    the front or rear of the target message queue; the order           00220000
*    of messages / message lines in the collector queue is              00230000
*    preserved.                                                         00240000
*                                                                       00250000
*    Upon completion of one or more $ENQMSG requests, the               00260000
*    anchor word provided contains the address of a msg queue           00270000
*    header described by $MSGBUF and identical to that created          00280000
*    by the $MSG service.                                               00290000
*                                                                       00300000
*                                                                       00310000
* ON ENTRY:                                                             00320000
*                                                                       00330000
*    R1  contains the address of a parameter list constructed           00340000
*        as described by the local REQPARM mapping                      00350000
*                                                                       00360000
* ON EXIT:                                                              00370000
*                                                                       00380000
*    R15 contains zero                                                  00390000
*                                                                       00400000
**<DOC-OFF>****************************************************         00410000
                                                                        00420000
         EJECT                                                          00430000
***************************************************************         00440000
*                                                                       00450000
* MAINTENANCE:                                                          00460000
*                                                                       00470000
*    04/14/95 R. Turgeon  Rel 2.0                                       00480000
*             Trim all messages enqueued to reduce message              00490000
*             storage requirements.                                     00500000
*                                                                       00510000
*    04/24/95 R. Turgeon  Rel 2.0                                       00520000
*             Implement LIFO / FIFO message queuing option              00530000
*                                                                       00540000
***************************************************************         00550000
                                                                        00560000
         EJECT                                                          00570000
***************************************************************         00580000
*                                                                       00590000
* MAPPING:  REQPARM - REQUEST PARAMETER LIST                            00600000
*                                                                       00610000
***************************************************************         00620000
                                                                        00630000
REQPARM  DSECT                                                          00640000
REQPMSGB DS    A             ADDR OF BUFFER DESCRIBED BY $MSGBUF AS     00650000
*                            PREVIOUSLY CREATED BY $MSG DEST=$BUFFER    00660000
*                                                                       00670000
REQPANCH DS    A             ADDR OF PTR USED TO ANCHOR THE COLLECTOR   00680000
*                            MESSAGE QUEUE.  MUST BE ZERO ON THE        00690000
*                            INITIAL CALL                               00700000
*                                                                       00710000
REQPSTGQ DS    A             ADDR OF AN INITIALIZED STGGET QHDR         00720000
*                                                                       00730000
REQPSEQ  DS    A             ADDR OF A FLAG BYTE DETERMINING WHETHER    00740000
*                            THE MESSAGE(S) WILL BE ENQUEUED IN         00750000
*                            FIFO (ZERO) OR LIFO (NONZERO) SEQUENCE,    00760000
*                            OR ZERO (FIFO BY DEFAULT)                  00770000
*                                                                       00780000
REQPLN   EQU   *-REQPARM     LENGTH OF PLIST                            00790000
                                                                        00800000
         EJECT                                                          00810000
         #WORK ,                                                        00820000
         #ENDWORK ,                                                     00830000
                                                                        00840000
         EJECT                                                          00850000
         $MSGBUF ,                                                      00860000
                                                                        00870000
         EJECT                                                          00880000
         ABCODES PRINT=NOGEN                                            00890000
                                                                        00900000
         EQUS  ,                                                        00910000
                                                                        00920000
         EJECT                                                          00930000
IGENMSGQ #ENTER PREG=R8                                                 00940000
                                                                        00950000
         USING ITASK,R10          STDENV                                00960000
                                                                        00970000
         EJECT                                                          00980000
***************************************************************         00990000
*                                                                       01000000
*   ALLOCATE MESSAGE QUEUE HEADER ON FIRST REQUEST                      01010000
*                                                                       01020000
***************************************************************         01030000
                                                                        01040000
         USING REQPARM,R8                                               01050000
                                                                        01060000
H        USING $MSGBUF,R5         DECLARE INTENTIONS                    01070000
         L     R6,REQPANCH        FETCH ANCHOR PTR                      01080000
         ICM   R5,15,0(R6)        MESSAGE QUEUE HDR BUILT YET?          01090000
         BNZ   ANCHORED           DONE IF SO                            01100000
                                                                        01110000
         L     R2,REQPSTGQ        FETCH STGGET QH ADDR                  01120000
         STGGET $MSBPFXL,QH=(R2)  ACQUIRE STORAGE FOR MSG Q HDR         01130000
         BNZ   ABN_STG            STORAGE MANAGEMENT FAILURE            01140000
                                                                        01150000
         LR    R5,R1              DESCRIBE STORAGE AREA                 01160000
         LA    R0,H.$MSGQF        MESSAGE QUEUE FORWARD LINK ADDR       01170000
         ST    R0,H.$MSGQL        STD QUEUE HDR INITIALIZATION          01180000
         ST    R5,0(,R6)          ANCHOR STRUCTURE IN REQUESTOR STG     01190000
                                                                        01200000
ANCHORED DS    0H                                                       01210000
                                                                        01220000
***************************************************************         01230000
*                                                                       01240000
*   EXTRACT MESSAGE HANDLING OPTIONS, IDENTIFY INSERTION POINT          01250000
*                                                                       01260000
***************************************************************         01270000
                                                                        01280000
PREV     USING $MSBHDR,R9         ROVING PREDECESSOR ENTRY ADDRESS      01290000
                                                                        01300000
         L     R9,H.$MSGQL        ASSUME FIFO INSERT AT END OF QUEUE    01310000
         ICM   R1,15,REQPSEQ      MESSAGE SEQUENCE INDICATOR PROVIDED?  01320000
         BZ    IPSET              DEFAULT TO FIFO IF NOT                01330000
         CLI   0(R1),0            FIFO QUEUING SPECIFIED?               01340000
         BE    IPSET              SKIP IF SO                            01350000
         LA    R9,H.$MSGQF        LIFO INSERT AT FRONT OF QUEUE         01360000
                                                                        01370000
IPSET    DS    0H                                                       01380000
                                                                        01390000
***************************************************************         01400000
*                                                                       01410000
*   EXAMINE EACH SOURCE MESSAGE AND DETERMINE TRIMMED LENGTH            01420000
*                                                                       01430000
***************************************************************         01440000
                                                                        01450000
         ICM   R4,15,REQPMSGB     REQUESTORS $MSG RESULT AREA           01460000
         BZ    NORMRET            NO MESSAGES PROVIDED                  01470000
         USING $MSGBUF,R4         DESCRIBE REQUESTORS AREA              01480000
                                                                        01490000
         ICM   R3,15,$MSGQF       LOCATE FIRST MESSAGE                  01500000
         BZ    NORMRET            NO MSGS QUEUED                        01510000
         USING $MSBHDR,R3         MESSAGE FORMAT - REQUESTORS STORAGE   01520000
                                                                        01530000
MOVEMSG  DS    0H                 EXAMINE NEXT MESSAGE                  01540000
         LH    R6,$MSBLEN         LENGTH OF MESSAGE TEXT                01550000
                                                                        01560000
         @TRIM $MSBTEXT,(R6),CHAR=NULL                                  01570000
                                                                        01580000
         LTR   R1,R1              TEXT PRESENT?                         01590000
         BNZ   *+8                SKIP IF SO                            01600000
         LA    R1,1               ASSUME PURPOSE IS SPACER RECORD       01610000
                                                                        01620000
         LA    R6,$MSBHDRL(,R1)   TOTAL TRIMMED MESSAGE LENGTH          01630000
                                                                        01640000
*--------------------------------------------------------------         01650000
*   ACQUIRE STORAGE FOR MESSAGE AND CREATE A COPY                       01660000
*--------------------------------------------------------------         01670000
                                                                        01680000
         L     R2,REQPSTGQ        FETCH STGGET QU ADDR                  01690000
         STGGET (R6),QH=(R2)      ACQUIRE STORAGE FOR MSG               01700000
         BNZ   ABN_STG            STORAGE MANAGEMENT FAILURE            01710000
                                                                        01720000
         LR    R7,R1              RETAIN ALLOCATED BUFFER ADDR          01730000
C        USING $MSBHDR,R7         COLLECTOR COPY OF MSG                 01740000
                                                                        01750000
         LR    R0,R7              COPY MESSAGE TO COLLECTOR BUFFER      01760000
         LR    R1,R6                                                    01770000
         LA    R14,$MSBHDR                                              01780000
         LR    R15,R1                                                   01790000
         MVCL  R0,R14                                                   01800000
                                                                        01810000
         ST    R1,C.$MSBLINK      GROUND THE MESSAGE ENTRY              01820000
         SH    R6,=AL2($MSBHDRL)  BACKOUT LENGTH OF MSG HEADER          01830000
         STH   R6,C.$MSBLEN       SAVE TRIMMED TEXT LENGTH              01840000
                                                                        01850000
*--------------------------------------------------------------         01860000
*   REQUEUE CURRENT MSG IN FIFO OR LIFO SEQUENCE                        01870000
*--------------------------------------------------------------         01880000
                                                                        01890000
         L     R0,PREV.$MSBLINK   FORWARD LINK FROM PREDECESSOR         01900000
         ST    R0,C.$MSBLINK      BECOMES FORWARD LINK FROM CURRENT     01910000
         ST    R7,PREV.$MSBLINK   INSERT NEW ENTRY AFTER PREDECESSOR    01920000
                                                                        01930000
         C     R9,H.$MSGQL        INSERTION OCCURRED AT END OF QUEUE?   01940000
         BNE   *+8                SKIP IF NOT                           01950000
         ST    R7,H.$MSGQL        REPLACE PTR TO LAST ENTRY IF SO       01960000
                                                                        01970000
         LR    R9,R7              NEW PREDECESSOR IS NEW ENTRY          01980000
                                                                        01990000
*--------------------------------------------------------------         02000000
*   UPDATE MESSAGE QUEUE USAGE STATS AND ADVANCE TO NEXT MSG            02010000
*--------------------------------------------------------------         02020000
                                                                        02030000
         LH    R15,H.$MSGCNT      UPDATE COLLECTOR QUEUE MSG COUNT      02040000
         LA    R15,1(,R15)                                              02050000
         STH   R15,H.$MSGCNT                                            02060000
                                                                        02070000
         L     R15,H.$MSBUSED     UPDATE TOTAL SIZE OF QUEUED MSGS      02080000
         AR    R15,R6                                                   02090000
         ST    R15,H.$MSBUSED                                           02100000
                                                                        02110000
         ICM   R3,15,$MSBLINK     ADVANCE TO NEXT INPUT MESSAGE         02120000
         BNZ   MOVEMSG            EXTRACT ALL REQUESTOR  MSGS           02130000
         DROP  R3,C,H             $MSBHDR, COLLECTOR MSG, COLLECTOR HDR 02140000
                                                                        02150000
***************************************************************         02160000
*                                                                       02170000
*   RETURN COMPLETION STATUS TO CALLER                                  02180000
*                                                                       02190000
***************************************************************         02200000
                                                                        02210000
NORMRET  DS    0H                                                       02220000
         LA    R15,RC00                                                 02230000
                                                                        02240000
RETURN   DS    0H                                                       02250000
         #EXIT ,                                                        02260000
                                                                        02270000
         EJECT ,                                                        02280000
***************************************************************         02290000
*                                                                       02300000
*   CATASTROPHIC FAILURES                                               02310000
*                                                                       02320000
***************************************************************         02330000
                                                                        02340000
ABN_STG  DS    0H                                                       02350000
         $ABEND ABE_STORAGE,(R2),DUMP=YES,                             X02360000
               TITLE='STORAGE MANAGEMENT FAILURE'                       02370000
                                                                        02380000
         EJECT                                                          02390000
***************************************************************         02400000
*                                                                       02410000
*   RETURN COMPLETION STATUS TO CALLER                                  02420000
*                                                                       02430000
***************************************************************         02440000
                                                                        02450000
         LTORG ,                                                        02460000
                                                                        02470000
         PRINT NOGEN                                                    02480000
         ICVT  ,                                                        02490000
         ITASK ,                                                        02500000
         END   ,                                                        02510000
