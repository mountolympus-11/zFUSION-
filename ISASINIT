ISASINIT TITLE 'SAS/C run-time environment initialization'              00010000
*---------------------------------------------------------------------- 00020000
*                                                                       00030000
* Routine:                                                              00040000
*                                                                       00050000
*   ISASINIT - SAS/C run-time environment initialization                00060000
*                                                                       00070000
* Description:                                                          00080000
*                                                                       00090000
*   ISASINIT initializes the SAS/C environment.  A CRAB, the string     00100000
*   table and the pseudo-register vector are allocated via $GETSTOR     00110000
*   and the address is stored at the caller supplied address.           00120000
*   The CRAB is initialized with the model data defined in this         00130000
*   module and with the addresses of the prolog (L$UPREP/L$UPROL)       00140000
*   and eplilog (L$UEPIL) routines.  The address of the cytype          00150000
*   character classification table is also set.                         00160000
*                                                                       00170000
* Entry:                                                                00180000
*                                                                       00190000
*   R1 = Address of Workunit @CB                                        00200000
*                                                                       00210000
* Exit:                                                                 00220000
*                                                                       00230000
*   N/A                                                                 00240000
*                                                                       00250000
* Notes:                                                                00260000
*                                                                       00270000
* - Each workunit requires it's own CRAB.                               00280000
* - The address of the ICVT is stored in CRABUSR1.                      00290000
* - The address of the workunit (IPCB or ITASK) is stored in CRABUSR2.  00300000
* - Functions setjmp, longjmp, blkjmp, and exit are not supported.      00310000
* - The environment initialization presumes that all C modules conform  00320000
*   to SAS/C's SPE library restrictions and are compiled RENT and       00330000
*   INDEP.                                                              00340000
* - The CRAB's stack maintenance fields are not used by this or any     00350000
*   other run-time support routines.                                    00360000
* - For stack implementation details refer to the L$UPREP/L$UPROL and   00370000
*   L$UEPIL modules.                                                    00380000
*                                                                       00390000
*---------------------------------------------------------------------- 00400000
                                                                        00410000
         EJECT ,                                                        00420000
         @CB   TYPE=DSECT,WORKUNIT=YES                                  00430000
                                                                        00440000
         EJECT ,                                                        00450000
         EQUS  LINKAGE=COND                                             00460000
                                                                        00470000
HEAPSIZE EQU   (16*1024)-32            initial heap size (if needed)    00480000
                                                                        00490000
R_PARM   EQU   R8                                                       00500000
R_CRAB   EQU   R9                                                       00510000
R_ITASK  EQU   R10                                                      00520000
R_ICVT   EQU   R11                                                      00530000
R_BASE   EQU   R12                                                      00540000
                                                                        00550000
WORKAREA #WORK ,                                                        00560000
         #ENDWORK ,                                                     00570000
                                                                        00580000
         EJECT ,                                                        00590000
ISASINIT #ENTER BASE=R_BASE,PREG=R_PARM                                 00600000
                                                                        00610000
         USING @CB,R_PARM              WORKUNIT ADDRESSABILITY          00620000
                                                                        00630000
*---------------------------------------------------------------------- 00640000
* Address ICVT and ITASK                                                00650000
*---------------------------------------------------------------------- 00660000
         @RESTENV CVTREG=R_ICVT,TASKREG=R_ITASK                         00670000
         USING ICVT,R_ICVT             R_ICVT --> ICVT                  00680000
         USING ITASK,R_ITASK           R_ITASK --> ITASK                00690000
                                                                        00700000
*---------------------------------------------------------------------- 00710000
* Allocate the CRAB                                                     00720000
*---------------------------------------------------------------------- 00730000
         L     R2,ICTCPRVL             get pseudo-register vector size  00740000
         LA    R2,CRABILEN+256(,R2)    add in CRAB and translate table  00750000
                                                                        00760000
         $GETSTOR (R2),LOC=ANY,OWNER=@CB                                00770000
                                                                        00780000
         ST    R1,@CBSASC              save CRAB address                00790000
         LR    R_CRAB,R1               R_CRAB --> CRAB                  00800000
         USING CRAB,R_CRAB                                              00810000
                                                                        00820000
*---------------------------------------------------------------------- 00830000
* Initialize the CRAB                                                   00840000
*---------------------------------------------------------------------- 00850000
         MVC   CRAB(MODLLEN),MODLCRAB  copy model CRAB                  00860000
         L     R1,=A(HEAPSIZE)         set initial heap size            00870000
         ST    R1,CRABHINT                                              00880000
         OI    CRABHINT,X'80'          flag as initial                  00890000
         ST    R_ICVT,CRABUSR1         save ICVT address in CRAB        00900000
         ST    R_PARM,CRABUSR2         save workunit address            00910000
         LA    R1,CRAB+CRABILEN        locate end of string table       00920000
         ST    R1,CRABEOST             save its address                 00930000
         MVI   0(R1),1                 make its first byte 1            00940000
         LA    R1,256(,R1)             address the PRV                  00950000
         ST    R1,CRABPRV              save its address                 00960000
         MVI   CRABDCPT,C'.'           decimal point is '.'             00970000
                                                                        00980000
*---------------------------------------------------------------------- 00990000
* The ctype character classification table is defined by the            01000000
* external symbol L$CXCTAB.  We store this address in the __CT          01010000
* pseudo-register, and in the CRABCTAB field, for access by             01020000
* compiled code.  If ctype functions are not used, this code            01030000
* can be removed, and L$CCTYP excluded from the load module.            01040000
*---------------------------------------------------------------------- 01050000
                                                                        01060000
         EXTRN L$CXCTAB           ADDRESS OF CTYPE TABLE            4.5 01070000
         L     R15,=A(L$CXCTAB)   LOCATE IT                         4.5 01080000
                                                                        01090000
         LA    R15,1(,R15)        ADJUST TABLE TO HAVE ORIGIN 1     3.1 01100000
         ST    R15,CRABCTAB       STORE FOR BUILTIN CTYPE FUNCTIONS 3.1 01110000
                                                                        01120000
         #EXIT                                                          01130000
                                                                        01140000
*---------------------------------------------------------------------- 01150000
* Constants                                                             01160000
*---------------------------------------------------------------------- 01170000
         LTORG                                                          01180000
                                                                        01190000
*---------------------------------------------------------------------  01200000
* Assembler F does not generate a TXT card for a CXD.  This             01210000
* causes problems if CLINK is used to remove pseudo-registers,          01220000
* as there is no TXT card in which to store the cumulative              01230000
* pseudo-register length.  The following apparently pointless           01240000
* DC and ORG assures that a TXT card is in fact generated.              01250000
*---------------------------------------------------------------------  01260000
*                                                                       01270000
MODLCRAB DS    0D                 MODEL CRAB                        4.0 01280000
MODLHOOK B     0(0,1)             DUMMY DEBUGGING HOOK              4.0 01290000
MODLPRLG DC    V(L$UPROL)         ADDR OF PROLOG ROUTINE            4.0 01300000
MODLEPLG DC    V(L$UEPIL)         ADDR OF EPILOG ROUTINE            4.0 01310000
MODLPRV  DC    A(0)               ADDR OF THE PSEUDO-REGISTER VECTOR4.0 01320000
MODLAXL  DC    A(0)               ATEXIT ROUTINE LIST               4.0 01330000
MODLHINT DC    A(0)               HEAP TRACT POINTER                4.0 01340000
MODLZERO DC    D'0.0'             A double (AND int) ZERO           4.0 01350000
MODLDBL1 DC    D'1.0'             A double 1.0                      4.0 01360000
MODL2P31 DC    X'4E00000080000000'     USEFUL CONSTANT FOR             *01370000
                                       double <-> int CONVERSIONS   4.0 01380000
MODLUNM0 DC    X'4E00000000000000'     UNNORMALIZED ZERO FOR           *01390000
                                       double <-> int CONVERSIONS   4.0 01400000
MODLDWK  DC    D'0.0'             double <-> int CONVERSION WK AREA 4.0 01410000
MODL4K   DC    A(4096)            4096 FOR COMPILER TO USE          4.0 01420000
MODLINT1 DC    F'1'               AN int 1                          4.0 01430000
MODLNEG1 DC    F'-1'              AN int -1 (=0xFFFFFFFF)           4.0 01440000
MODLFLGC DC    X'00'              FLAGS FOR USE BY COMPILED CODE    4.0 01450000
         DC    XL3'00'            RESERVED                          4.0 01460000
MODLEOST DC    A(0)               END OF STRING (\0) TRT TABLE ADDR 4.0 01470000
MODL16M  DC    X'00FFFFFF'        MAX LENGTH FOR xxCL INSTRUCTIONS  4.0 01480000
MODLSGCK B     0(0,R14)           DUMMY SIGCHK() HOOK               4.0 01490000
MODLSICK B     0(0,R14)           IMPLICIT SIGCHK() HOOK            4.0 01500000
         DC    A(0)               RESERVED                          4.0 01510000
MODLCTAB DC    A(0)               CTYPE CLASSIFICATION TABLE ADDR   4.0 01520000
         DC    2A(0)              RESERVED                          4.0 01530000
MODLPENV DC    A(0)               SAVE AREA FOR NON-C CALLER OF C   4.0 01540000
MODLLVER DC    CL8'93028C5E'      LIBRARY VERSION NUMBER            5.5 01550000
MODLCLAW DC    C'LIPS'            Library Independent Program Support   01560000
MODLLEN  EQU   *-MODLCRAB         LENGTH OF MODEL CRAB                  01570000
                                                                        01580000
         TITLE 'DATA AREAS'                                             01590000
*---------------------------------------------------------------------- 01600000
* Data areas                                                            01610000
*---------------------------------------------------------------------- 01620000
         COPY  CRAB                                                     01630000
                                                                        01640000
         EJECT ,                                                        01650000
         COPY  DSA                                                      01660000
                                                                        01670000
         EJECT ,                                                        01680000
         COPY  CPROLOG                                                  01690000
                                                                        01700000
         EJECT ,                                                        01710000
         COPY  HINT                                                     01720000
                                                                        01730000
         PRINT NOGEN                                                    01740000
         ICVT  ,                                                        01750000
         ITASK ,                                                        01760000
         IPCB  ,                                                        01770000
         IHAPSA ,                                                       01780000
         IKJTCB ,                                                       01790000
         PRINT GEN                                                      01800000
                                                                        01810000
         END                                                            01820000
