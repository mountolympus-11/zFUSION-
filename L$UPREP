L$UPREP  TITLE 'Integrator implementation of SAS/C function entry'      00010000
*---------------------------------------------------------------------- 00020000
*                                                                       00030000
*  C stack allocation and linkage                                       00040000
*                                                                       00050000
*  Pre-L$UPREP/L$UPROL (function entry) logic:                          00060000
*                                                                       00070000
*        USING CPROLOG,R15                                              00080000
*        STM   14,5,12(13)                                              00090000
*        L     14,=V(L$UPREP)                                           00100000
*        BR    14                                                       00110000
*                                                                       00120000
*  Post-L$UPREP/L$UPROL requirements:                                   00130000
*                                                                       00140000
*        R1, and R6 through 12 unchanged                                00150000
*        R4  --> C function's constant CSECT (from CPROCONS)            00160000
*        R5  --> C function's base register                             00170000
*        R12 --> CRAB                                                   00180000
*        R13 --> new DSA                                                00190000
*                                                                       00200000
*  Entry:                                                               00210000
*    R1  - parameter list                                               00220000
*    R13 - save area/DSA                                                00230000
*    R14 - base register                                                00240000
*    R15 - CPROLOG                                                      00250000
*                                                                       00260000
*---------------------------------------------------------------------- 00270000
                                                                        00280000
         EJECT                                                          00290000
***************************************************************         00300000
*                                                                       00310000
* MAINTENANCE:                                                          00320000
*                                                                       00330000
*    04/11/95 R. Turgeon                                                00340000
*             IGENGSAV changed to neither save nor restore              00350000
*             regs R2-R12 increasing its scope to include               00360000
*             IRB mode code.  The strategy is to store these            00370000
*             regs in what appears to be a volitile, but                00380000
*             usable area in the CRAB (CRABTAUT) and then               00390000
*             plant a pointer to that area in the DSA (DSAR15).         00400000
*             There are no user fields available.                       00410000
*                                                                       00420000
***************************************************************         00430000
                                                                        00440000
         EQUS  ,                                                        00450000
                                                                        00460000
R_BASE   EQU   R2                      local base register              00470000
R_PLIST  EQU   R4                      parameter list address           00480000
R_CPRLG  EQU   R5                      CPROLOG address/function's base  00490000
                                                                        00500000
L$UPREP  CSECT ,                       C function entry                 00510000
L$UPREP  RMODE ANY                                                      00520000
L$UPREP  AMODE ANY                                                      00530000
                                                                        00540000
         ENTRY L$UPROL,@ENTRY          ALIASES                          00550000
                                                                        00560000
         USING L$UPREP,R14             R14 --> L$UPREP (temporary)      00570000
         USING DSA,R13                 R13 --> save area (may be C DSA) 00580000
L$UPROL  STM   R6,R12,DSAR6            save regs possibly not saved     00590000
         LR    R_CPRLG,R15             function's prolog/base address   00600000
         LR    R_BASE,R14              re-locate base register          00610000
         DROP  R14                                                      00620000
         USING L$UPREP,R_BASE          R_BASE  --> L$UPREP              00630000
         USING CPROLOG,R_CPRLG         R_CPRLG --> CPROLOG              00640000
                                                                        00650000
*---------------------------------------------------------------------- 00660000
* Access CRAB and ICVT                                                  00670000
*---------------------------------------------------------------------- 00680000
         L$UCENV ,                     locate CRAB                      00690000
                                                                        00700000
         L     R12,0(,R12)             access CRAB                      00710000
         USING CRAB,R12                R12 --> CRAB                     00720000
         L     R11,CRABUSR1                                             00730000
         USING ICVT,R11                R11 --> ICVT                     00740000
                                                                        00750000
*---------------------------------------------------------------------- 00760000
* Adjust parameter list                                                 00770000
*                                                                       00780000
* If the function being called is one returning a structure,            00790000
* and the caller is not in C, add 4 to R1.  C uses the zeroeth          00800000
* word of the parameter list to address the spot where the              00810000
* return value should be placed, but non-C callers are told to          00820000
* use the first word, since many of them may be unable to use           00830000
* the area preceding the parm list.  Because registers have             00840000
* already been saved, this will not interfere with preserving           00850000
* the contents of register 1 on return.                                 00860000
*---------------------------------------------------------------------- 00870000
         C     R13,CRABCDSA            C to C ?                         00880000
         BE    NOADJUST                yes, skip plist adjustment       00890000
                                                                        00900000
         TM    CPROTYPE,CPROSTRC       will a structure be returned ?   00910000
         BZ    NOADJUST                no, bypass plist adjustment      00920000
         LA    R1,4(,R1)               yes, skip over return-area ptr   00930000
                                                                        00940000
NOADJUST DS    0H                                                       00950000
         ICM   R0,B'1111',CPRODSSZ     DSA needed ?                     00960000
         BNZ   GETDSA                  yes, get a DSA                   00970000
                                                                        00980000
*---------------------------------------------------------------------- 00990000
* DSA not needed                                                        01000000
*---------------------------------------------------------------------- 01010000
         MVI   CRABFLGC,CRABNDSA       indicate DSA-less                01020000
         LM    R10,R11,DSAR10          restore regs tainted by L$UCENV  01030000
         L     R4,CPROCONS             get constants pointer            01040000
         B     CPRONDGO                execute the DSA-less function    01050000
                                                                        01060000
*---------------------------------------------------------------------- 01070000
* Allocate new DSA, addressability is lost upon return                  01080000
*---------------------------------------------------------------------- 01090000
GETDSA   DS    0H                                                       01100000
         STM   R0,R12,CRABTAUT         preserve vulerable regs          01110000
         LA    R12,CRABTAUT            location of temp savearea        01120000
         ST    R12,DSAR15              daring reuse                     01130000
                                                                        01140000
         @CALL IGENGSAV,CTYPE=CVT                                       01150000
         USING *,R14                   temp addressability              01160000
         B     *+8                     addressability lost              01170000
         DC    C'SASC'                 inform igengsav "do not clear"   01180000
                                                                        01190000
         MVC   DSAUSER-DSA(,R15),CSA0  tag as a C DSA                   01200000
         BZ    *+8                     branch if assigned to curr frame 01210000
         OI    DSAUSER_FLAG-DSA(R15),DF$FRAME                           01220000
                                                                        01230000
*---------------------------------------------------------------------- 01240000
* Restore environment                                                   01250000
*---------------------------------------------------------------------- 01260000
         L     R12,DSAR15              restore savearea ptr             01270000
         LM    R0,R12,0(R12)           restore regs including base      01280000
         LM    R10,R11,DSAR10          restore tainted regs             01290000
         DROP  R14                                                      01300000
                                                                        01310000
*---------------------------------------------------------------------- 01320000
* Prepare new DSA and execute the function                              01330000
*---------------------------------------------------------------------- 01340000
         ST    R13,4(R15)              chain save areas                 01350000
         ST    R15,8(R13)                                               01360000
         LR    R13,R15                 switch to new DSA                01370000
                                                                        01380000
         ST    R_CPRLG,DSAPRBSV        save prolog base for epilog      01390000
         MVC   DSAPDSA,CRABCDSA        save prior "C" DSA               01400000
         ST    R13,CRABCDSA            set current "C" DSA              01410000
         MVC   DSAOWNER,CPROFNM        indicate DSA's owner             01420000
         ST    R1,DSAPARMS             save parmlist in DSA             01430000
         L     R4,CPROCONS             get constants pointer            01440000
         B     CPROGO                  execute the function             01450000
                                                                        01460000
*---------------------------------------------------------------------- 01470000
* Constants                                                             01480000
*---------------------------------------------------------------------- 01490000
CSA0     DC    C'CSA',X'00'            "C" DSA eyecatch and flags       01500000
         LTORG                                                          01510000
                                                                        01520000
*---------------------------------------------------------------------- 01530000
* Define @ENTRY as a separate CSECT.  The existence of this             01540000
* symbol will prevent link-editing errors of library-less C             01550000
* programs without a "main" function.                                   01560000
*---------------------------------------------------------------------- 01570000
                                                                        01580000
@ENTRY   CSECT ,               PREVENT CONFLICT WITH OTHER @ENTRY       01590000
@ENTRY   RMODE ANY                                                      01600000
@ENTRY   AMODE ANY                                                      01610000
         DC    X'00'                   AVOID ZERO-LENGTH CSECT          01620000
                                                                        01630000
*---------------------------------------------------------------------- 01640000
* Data areas                                                            01650000
*---------------------------------------------------------------------- 01660000
         COPY  CPROLOG                 SAS/C PROLOG CODE                01670000
                                                                        01680000
         COPY  DSA                     SAS/C DYNAMIC SAVE AREA          01690000
DSAUSER_CSA  EQU DSAUSER,3                                              01700000
DSAUSER_FLAG EQU DSAUSER+3,1                                            01710000
DF$FRAME     EQU X'80'                 FIRST ALLOCATION IN FRAME        01720000
                                                                        01730000
         COPY  CRAB                    SAS/C RUNTIME ANCHOR BLOCK       01740000
         END                                                            01750000
