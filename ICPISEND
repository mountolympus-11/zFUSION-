ICPISEND TITLE 'INTEGRATOR - CPIC CMSEND API - SEND'                    00010000
                                                                        00020000
         PRINT NOGEN                                                    00030000
         CMINCL ,                 INTEGRATOR CPI-C DEFINITIONS          00040000
         L62INCL ,                INTEGRATOR LU6.2 DEFINITIONS          00050000
         PRINT GEN                                                      00060000
                                                                        00070000
**<DOC-ON>************************************************************* 00080000
*                                                                       00090000
* ROUTINE: ICPISEND - CPIC CMSEND API                                   00100000
*                                                                       00110000
* DESCRIPTION:                                                          00120000
*                                                                       00130000
*    THIS ROUTINE IS CALLED TO PROCESS THE CMSEND VERB.                 00140000
*                                                                       00150000
* ON ENTRY:                                                             00160000
*                                                                       00170000
*    R15 = ENTRY POINT ADDRESS                                          00180000
*    R14 = RETURN      ADDRESS                                          00190000
*    R13 = SAVE AREA   ADDRESS                                          00200000
*    R01 = PARM LIST   ADDRESS                                          00210000
*                                                                       00220000
*          +00 = ADDRESS OF CONVERSATION_ID                             00230000
*          +04 = ADDRESS OF BUFFER                                      00240000
*          +08 = ADDRESS OF SEND_LENGTH                                 00250000
*          +0C = ADDRESS OF REQUEST_TO_SEND_RECEIVED RETURN AREA        00260000
*          +10 = ADDRESS OF RETURN_CODE RETURN AREA                     00270000
*                                                                       00280000
* ON EXIT:                                                              00290000
*                                                                       00300000
*    R15 = 0                                                            00310000
*                                                                       00320000
*    RETURN_CODE = CM_OK                      --> CMSEND SUCCESSFUL     00330000
*                = CM_PROGRAM_PARAMETER_CHECK --> INVALID CONV_ID       00340000
*                = CM_PROGRAM_STATE_CHECK     --> INVALID STATE         00350000
*                = CM_PRODUCT_SPECIFIC_ERROR  --> BAD PARM              00360000
*                = CM_OPERATION_NOT_ACCEPTED  --> N/A                   00370000
*                                                                       00380000
**<DOC-OFF>************************************************************ 00390000
         EJECT ,                                                        00400000
*********************************************************************** 00410000
*                                                                       00420000
* MAINTENANCE:                                                          00430000
*                                                                       00440000
*   07/01/94 RANDY WITEK                                                00450000
*                                                                       00460000
*********************************************************************** 00470000
                                                                        00480000
         EQUS  ,                  GENERAL EQUATES                       00490000
                                                                        00500000
RICVT    EQU   R11                                                      00510000
RITASK   EQU   R10                                                      00520000
RBASE    EQU   R9                                                       00530000
RIVTAM   EQU   R8                                                       00540000
RCMLIST  EQU   R7                                                       00550000
RTKB     EQU   R6                                                       00560000
RRCB     EQU   R5                                                       00570000
RISESS   EQU   R4                                                       00580000
                                                                        00590000
         USING DSA,R13            ESTABLISH ADDRESSABILITY              00600000
         USING CRAB,R12           ESTABLISH ADDRESSABILITY              00610000
         USING ICVT,RICVT         ESTABLISH ADDRESSABILITY              00620000
         USING ITASK,RITASK       ESTABLISH ADDRESSABILITY              00630000
         USING IVTAMCVT,RIVTAM    ESTABLISH ADDRESSABILITY              00640000
         USING CMLIST,RCMLIST     ESTABLISH ADDRESSABILITY              00650000
         USING TKB,RTKB           ESTABLISH ADDRESSABILITY              00660000
         USING RCB,RRCB           ESTABLISH ADDRESSABILITY              00670000
         USING ISESS,RISESS       ESTABLISH ADDRESSABILITY              00680000
                                                                        00690000
         COPY  CRAB               "C" RUNTIME ANCHOR BLOCK              00700000
         COPY  DSA                DYNAMIC SAVE AREA                     00710000
WORKAREA DS    0H                 READ/WRITE WORKAREA                   00720000
WRK256   DS    XL256              GENERAL WORKAREA                      00730000
$SESSMFL $SESS MF=L               PLIST CONSTRUCTION                    00740000
$TASKMFL $TASK MF=L               PLIST CONSTRUCTION                    00750000
L62MFL   L62DLRC MF=L             PLIST CONSTRUCTION                    00760000
L62RETCD DS    F                  LU6.2 SERVICE RETURN CODE             00770000
SUB0SAVE DS    18F                SUBROUTINE SAVE AREA                  00780000
SUB1SAVE DS    18F                SUBROUTINE SAVE AREA                  00790000
SAVEEPB  DS    A                  XEPB ADDRESS                          00800000
                                                                        00810000
CONVID   DS    XL8                TEMPORARY CONVERSATION ID AREA        00820000
RETCODE  DS    F                  TEMPORARY RETURN CODE     AREA        00830000
RETRTSR  DS    F                  REQUEST TO SEND RECEIVED  AREA        00840000
CONVS    DS    F                  TEMPORARY CONV STATE      AREA        00850000
BUFFER   DS    F                  TEMPORARY BUFFER ADDRESS  AREA        00860000
LENGTH   DS    F                  TEMPORARY SEND LENGTH     AREA        00870000
NXTSTATE DS    F                  CONV STATE AFTER SUCCESSFUL SEND      00880000
MC1STLL  DS    H                  LL     FOR FIRST SEGMENT              00890000
MC1STID  DS    H                  GDS ID FOR FIRST SEGMENT              00900000
MC2NDLL  DS    H                  LL     FOR SECOND SEGMENT             00910000
                                                                        00920000
FLAG     DS    X                                                        00930000
FLAGIERR EQU   X'80'                                                    00940000
FLAGLOCK EQU   X'40'                                                    00950000
FLAGLCKD EQU   X'20'                                                    00960000
FLAGIER2 EQU   X'10'                                                    00970000
FLAGFREE EQU   X'08'                                                    00980000
WORKLEN  EQU   *-WORKAREA         LENGTH OF USER DSA AREA               00990000
DSALEN   EQU   *-DSA              LENGTH OF DSA                         01000000
                                                                        01010000
         $MSGDFT PREFIX=ICTPID,                                        +01020000
               COMPID='CPI',                                           +01030000
               TABLE=*#MSGS,                                           +01040000
               WORKA=0,                                                +01050000
               MF=(E,WRK256),                                          +01060000
               PRINT=NOGEN                                              01070000
                                                                        01080000
ICPSEND@ CSECT ,                                                        01090000
ICPISEND CENTRY DSA=DSALEN,BASE=RBASE,INDEP=YES                         01100000
                                                                        01110000
*---------------------------------------------------------------------- 01120000
* ENTRY                                                                 01130000
*---------------------------------------------------------------------- 01140000
                                                                        01150000
         LR    RCMLIST,R1         SAVE ADDRESS OF PLIST                 01160000
                                                                        01170000
         LA    R0,WORKAREA        ADDRESS OF USER DSA SECTION           01180000
         LA    R1,WORKLEN         LENGTH  OF USER DSA SECTION           01190000
         SR    R15,R15            PREPARE FOR CLEAR                     01200000
         MVCL  R0,R14             CLEAR USER DSA SECTION                01210000
                                                                        01220000
*---------------------------------------------------------------------- 01230000
* INITIALIZATION                                                        01240000
*---------------------------------------------------------------------- 01250000
                                                                        01260000
         @RESTENV ,               ENSURE ENVIRONMENT                    01270000
                                                                        01280000
         L     RIVTAM,ICTVTCVT    ESTABLISH IVTAMCVT POINTER            01290000
                                                                        01300000
         MVC   CONVID,=XL8'55AA55AA55AA55AA'                            01310000
         MVC   CONVS,=XL4'55AA55AA'                                     01320000
         MVC   BUFFER,=XL4'55AA55AA'                                    01330000
         MVC   LENGTH,=XL4'55AA55AA'                                    01340000
                                                                        01350000
         L     R1,CMLPARM5        ADDRESS OF RETURN_CODE AREA           01360000
         MVC   0(4,R1),0(R1)      TEST MOVEMENT                         01370000
                                                                        01380000
         ICM   R1,15,CMLPARM1     ADDRESS OF CONVERSATION ID            01390000
         BNP   INITERR            BRANCH IF BAD                         01400000
         MVC   CONVID,0(R1)       COPY CONVID                           01410000
                                                                        01420000
         ICM   R1,15,CMLPARM4     ADDRESS OF RTS_RECEIVED RETURN AREA   01430000
         BNP   INITERR            BRANCH IF BAD                         01440000
         MVC   0(4,R1),0(R1)      TEST MOVEMENT                         01450000
                                                                        01460000
         ICM   R1,15,CMLPARM3     ADDRESS OF SEND LENGTH                01470000
         BNP   INITERR            BRANCH IF BAD                         01480000
         ICM   R3,15,0(R1)        SEND LENGTH                           01490000
         ST    R3,LENGTH          SAVE LENGTH                           01500000
         BM    INITERR            BRANCH IF BAD                         01510000
         BZ    INITEND            BRANCH IF ZERO LENGTH                 01520000
         C     R3,=F'32767'       CHECK MAXIMUM LENGTH                  01530000
         BH    INITERR2           BRANCH IF BAD                         01540000
         ICM   R2,15,CMLPARM2     ADDRESS OF BUFFER                     01550000
         ST    R2,BUFFER          SAVE BUFFER ADDRESS                   01560000
         BNP   INITERR            BRANCH IF BAD                         01570000
         IC    R0,0(,R2)          TEST READ ACCESS (START OF BUFFER)    01580000
         LA    R2,0(R3,R2)        END OF BUFFER ADDRESS                 01590000
         BCTR  R2,0               ADDRESS OF LAST BYTE                  01600000
         IC    R0,0(,R2)          TEST READ ACCESS (END   OF BUFFER)    01610000
         B     INITEND                                                  01620000
                                                                        01630000
INITERR  DS    0H                                                       01640000
                                                                        01650000
         OI    FLAG,FLAGIERR      REMEMBER ERROR DETECTED               01660000
         B     INITEND                                                  01670000
                                                                        01680000
INITERR2 DS    0H                                                       01690000
                                                                        01700000
         OI    FLAG,FLAGIER2      REMEMBER ERROR DETECTED               01710000
                                                                        01720000
INITEND  DS    0H                                                       01730000
                                                                        01740000
*---------------------------------------------------------------------- 01750000
* ENTRY TRACE                                                           01760000
*---------------------------------------------------------------------- 01770000
                                                                        01780000
         $TRACE *=A(TRC_CPIC_ICPISEND),48 TRACE ENTRY W/ 48 USER BYTES  01790000
         BNZ   NOETRACE                   BRANCH IF NOT TRACING         01800000
         $APITRC ICPISEND                 TRACE COMMON STUFF            01810000
         ST    RCMLIST,24(,R1)            TRACE PARMLIST ADDRESS        01820000
         MVC   32(8,R1),CONVID            TRACE CONVERSATION ID         01830000
         MVC   40(4,R1),LENGTH            TRACE SEND LENGTH             01840000
         MVC   44(4,R1),BUFFER            TRACE BUFFER ADDRESS          01850000
NOETRACE DS    0H                                                       01860000
                                                                        01870000
*---------------------------------------------------------------------- 01880000
* LOCATE SPECIFIED CONVERSATION                                         01890000
*---------------------------------------------------------------------- 01900000
                                                                        01910000
         TM    FLAG,FLAGIERR             ERROR DETECTED ALREADY?        01920000
         BO    ERRPROD                   BRANCH IF YES                  01930000
                                                                        01940000
         TM    FLAG,FLAGIER2             ERROR DETECTED ALREADY?        01950000
         BO    ERRPARM                   BRANCH IF YES                  01960000
                                                                        01970000
         LA    R1,CONVID                 ADDRESS OF CONVERSATION ID     01980000
         L     R15,ICP@LOC               ENTRY POINT OF TKB/RCB LOCATE  01990000
         BASR  R14,R15                   LOCATE THE TKB/RCB             02000000
         LTR   RTKB,R1                   TKB ADDRESS                    02010000
         BNP   ERRPARM                   BRANCH IF BAD                  02020000
         LTR   RRCB,R0                   RCB ADDRESS                    02030000
         BNP   ERRPARM                   BRANCH IF BAD                  02040000
                                                                        02050000
         MVC   CONVS,RCBCONVS            COPY CONV STATE                02060000
                                                                        02070000
*---------------------------------------------------------------------- 02080000
* STATE CHECK                                                           02090000
*---------------------------------------------------------------------- 02100000
                                                                        02110000
         CLC   CONVS,=A(CM_SEND_STATE)                                  02120000
         BE    SEND                                                     02130000
         CLC   CONVS,=A(CM_SEND_PENDING_STATE)                          02140000
         BE    SENDPEND                                                 02150000
         B     ERRSTATE                                                 02160000
                                                                        02170000
*---------------------------------------------------------------------- 02180000
* PERFORM SEND                                                          02190000
*   -VALIDATE LENGTH                                                    02200000
*   -RESERVE THE SESSION                                                02210000
*   -LOCATE THE SBUF                                                    02220000
*   -BUILD LOGICAL RECORD (MAPPED) OR TRACK LOGICAL RECORDS (BASIC)     02230000
*   -COMPLETE SEND BASED ON CURRENT SEND TYPE                           02240000
*   -SEND "OVERLENGTH" DATA TO PARTNER                                  02250000
*---------------------------------------------------------------------- 02260000
                                                                        02270000
SEND     DS    0H                                                       02280000
SENDPEND DS    0H                                                       02290000
                                                                        02300000
*                                                                       02310000
* VALIDATE LENGTH                                                       02320000
*---------------------------------------------------------------------- 02330000
                                                                        02340000
         ICM   R1,15,LENGTH       SPECIFIED LENGTH                      02350000
         BM    ERRPARM            ERROR IF NOT POSITIVE                 02360000
         C     R1,=A(CM_MAXIMUM_SEND_LENGTH)                            02370000
         BH    ERRPARM            ERROR IF TOO LONG                     02380000
*                                                                       02390000
* RESERVE THE SESSION                                                   02400000
*---------------------------------------------------------------------- 02410000
                                                                        02420000
         BAS   R14,VTAMLOCK                                             02430000
                                                                        02440000
         $SESS $SESS_FIND_SESSION,                                     +02450000
               SESSION=RCBHSID,                                        +02460000
               ERRET=ERRSESS,                                          +02470000
               MF=(E,$SESSMFL)    LOCATE ASSOCIATED ISESS, IF ANY       02480000
                                                                        02490000
X        USING SPLIST,$SESSMFL                                          02500000
         L     RISESS,X.SPLAREA   ADDRESS OF ASSOCIATED ISESS BLOCK     02510000
         DROP  X                                                        02520000
                                                                        02530000
         TM    ISEF1,ISEF1TRM     SESS TERM STARTED?                    02540000
         BO    ERRSESS            BRANCH IF YES                         02550000
         TM    ISE62FL2,ISE62DRD  IS DRIVER DOWN?                       02560000
         BO    ERRSESS            BRANCH IF YES                         02570000
                                                                        02580000
*                                                                       02590000
* LOCATE THE SBUF                                                       02600000
*---------------------------------------------------------------------- 02610000
                                                                        02620000
         ST    RISESS,SUB0SAVE    MAKE A PLIST                          02630000
         LA    R1,SUB0SAVE        PASS ADDRESS OF PLIST                 02640000
         L     R15,ICP@SBUF       CALL THE SBUF SERVICE                 02650000
         BASR  R14,R15            LINK TO SERVICE                       02660000
                                                                        02670000
*                                                                       02680000
* MAPPED CONVERSATION - BUILD AND BUFFER LOGICAL RECORDS                02690000
*---------------------------------------------------------------------- 02700000
                                                                        02710000
         CLC   RCBCTYPE,=A(CM_MAPPED_CONVERSATION)                      02720000
         BNE   BFRBASIC           BRANCH IF NOT A MAPPED CONVERSATION   02730000
         MVC   MC1STID,=X'12FF'   SET THE GDS ID                        02740000
         L     R3,LENGTH          LENGTH OF DATA                        02750000
         LA    R3,4(,R3)          PLUS THE PREFIX                       02760000
         STH   R3,MC1STLL         SET THE LENGTH                        02770000
         C     R3,=F'32767'       DOES IT EXCEED THE MAXIMUM?           02780000
         BNH   MOVE1LL            BRANCH IF NOT                         02790000
                                                                        02800000
         S     R3,=F'32765'       LENGTH OF SECOND SEGMENT DATA + LL    02810000
         STH   R3,MC2NDLL         SET LENGTH FOR SECOND SEGMENT         02820000
         MVC   MC1STLL,=X'FFFF'   SENDING A MAXIMUM LENGTH RECORD       02830000
                                                                        02840000
MOVE1LL  DS    0H                                                       02850000
                                                                        02860000
         SBUF  PACK,                                                   +02870000
               AREA=MC1STLL,                                           +02880000
               AREALEN=4,                                              +02890000
               MF=(E,*ISE62SBF)   ADD THE LENGTH AND ID TO THE BUFFER   02900000
                                                                        02910000
         BZ    *+12               BRANCH IF ADD SUCCESSFUL              02920000
         BAS   R14,SBUFBUMP       GET A LARGER SBUF                     02930000
         B     MOVE1LL            AND ADD AGAIN                         02940000
                                                                        02950000
         SR    R3,R3              CLEAR FOR INSERT                      02960000
         ICM   R3,B'0011',MC1STLL COMPLETE RECORD LENGTH                02970000
         N     R3,=X'00007FFF'    CLEAR POSSIBLE CONTINUATION BIT       02980000
         S     R3,=F'4'           ADJUST FOR LL & ID                    02990000
                                                                        03000000
MOVE1DAT DS    0H                                                       03010000
                                                                        03020000
         SBUF  PACK,                                                   +03030000
               AREA=*BUFFER,                                           +03040000
               AREALEN=(R3),                                           +03050000
               MF=(E,*ISE62SBF)   ADD THE DATA TO THE BUFFER            03060000
                                                                        03070000
         BZ    *+12               BRANCH IF DATA SUCCESSFUL             03080000
         BAS   R14,SBUFBUMP       GET A LARGER SBUF                     03090000
         B     MOVE1DAT           AND ADD AGAIN                         03100000
                                                                        03110000
         SR    R3,R3              CLEAR FOR INSERT                      03120000
         ICM   R3,B'0011',MC2NDLL COMPLETE RECORD LENGTH                03130000
         BZ    MOVEDALL           DONE IF NOT SECOND SEGMENT            03140000
         S     R3,=F'2'           ADJUST FOR LL                         03150000
                                                                        03160000
MOVE2LL  DS    0H                                                       03170000
                                                                        03180000
         SBUF  PACK,                                                   +03190000
               AREA=MC2NDLL,                                           +03200000
               AREALEN=2,                                              +03210000
               MF=(E,*ISE62SBF)   ADD THE LENGTH TO THE BUFFER          03220000
                                                                        03230000
         BZ    *+12               BRANCH IF ADD SUCCESSFUL              03240000
         BAS   R14,SBUFBUMP       GET A LARGER SBUF                     03250000
         B     MOVE2LL            AND ADD AGAIN                         03260000
                                                                        03270000
MOVE2DAT DS    0H                                                       03280000
                                                                        03290000
         L     R2,BUFFER          ADDRESS OF USER DATA                  03300000
         A     R2,=F'32763'       DATA SENT IN FIRST SEGMENT            03310000
                                                                        03320000
         SBUF  PACK,                                                   +03330000
               AREA=(R2),                                              +03340000
               AREALEN=(R3),                                           +03350000
               MF=(E,*ISE62SBF)   ADD THE DATA TO THE BUFFER            03360000
                                                                        03370000
         BZ    *+12               BRANCH IF DATA SUCCESSFUL             03380000
         BAS   R14,SBUFBUMP       GET A LARGER SBUF                     03390000
         B     MOVE2DAT           AND ADD AGAIN                         03400000
                                                                        03410000
MOVEDALL DS    0H                                                       03420000
                                                                        03430000
         B     SENDTYPE           COMPLETE SEND BASED ON CURRENT TYPE   03440000
                                                                        03450000
*                                                                       03460000
* BASIC CONVERSATION - BUFFER LOGICAL RECORDS AND TRACK RECORD LENGTHS  03470000
*---------------------------------------------------------------------- 03480000
                                                                        03490000
BFRBASIC DS    0H                                                       03500000
                                                                        03510000
         ICM   R3,15,LENGTH       LENGTH OF USER DATA                   03520000
         BZ    SENDTYPE           NOTHING TO DO IF IT IS ZERO           03530000
                                                                        03540000
MOVEDAT  DS    0H                                                       03550000
                                                                        03560000
         L     R2,BUFFER          ADDRESS OF USER DATA                  03570000
                                                                        03580000
         SBUF  PACK,                                                   +03590000
               AREA=(R2),                                              +03600000
               AREALEN=(R3),                                           +03610000
               MF=(E,*ISE62SBF)   ADD THE DATA TO THE BUFFER            03620000
                                                                        03630000
         BZ    *+12               BRANCH IF DATA SUCCESSFUL             03640000
         BAS   R14,SBUFBUMP       GET A LARGER SBUF                     03650000
         B     MOVEDAT            AND ADD AGAIN                         03660000
                                                                        03670000
TRKLR    DS    0H                                                       03680000
                                                                        03690000
         ICM   R1,15,RCBSLLRM     CURRENT LOGICAL RECORD REMAINDER      03700000
         BZ    TRKNEWLR           BRANCH IF BEGINNING OF NEW RECORD     03710000
         BM    TRK1BYTE           BRANCH IF 1ST BYTE OF LL WAS SPLIT    03720000
         CR    R1,R3              IS REMAINDER GREATER THAN SEND LEN?   03730000
         BH    TRKLONG            BRANCH IF YES                         03740000
         LA    R2,0(R1,R2)        ADDRESS OF THE NEXT LOGICAL RECORD    03750000
         SR    R3,R1              REMAINING LENGTH                      03760000
         XC    RCBSLLRM,RCBSLLRM  CLEAR THE REMAINDER                   03770000
         B     TRKNEWLR           AND GET THE NEXT LOGICAL RECORD       03780000
                                                                        03790000
TRK1BYTE DS    0H                                                       03800000
                                                                        03810000
         SR    R1,R1               CLEAR FOR INSERT                     03820000
         ICM   R1,B'0010',RCBSNDLL PICK UP 1ST BYTE OF LL               03830000
         ICM   R1,B'0001',0(R2)    PICK UP SECOND BYTE OF LL            03840000
         N     R1,=X'00007FFF'     CLEAR POSSIBLE CONTINUATION BIT      03850000
         ST    R1,RCBSLLRM         SET THE NEW REMAINDER                03860000
         C     R1,=F'2'            AT LEAST 2 BYTES?                    03870000
         BL    ERRPARM             BRANCH IF NOT                        03880000
         LA    R3,1(,R3)           ADJUST LENGTH FOR MISSING BYTE       03890000
         BCTR  R2,0                ADJUST ADDRESS FOR MISSING BYTE      03900000
         B     TRKLR               AND CONTINUE LOGICAL RECORD TRACKING 03910000
                                                                        03920000
TRKNEWLR DS    0H                                                       03930000
                                                                        03940000
         LTR   R3,R3              ANY LENGTH REMAINING?                 03950000
         BNP   SENDTYPE           BRANCH IF NOT                         03960000
         C     R3,=F'2'           CAN WE GET A COMPLETE LL?             03970000
         BL    TRKSAVE1           BRANCH IF NOT                         03980000
         SR    R1,R1              CLEAR FOR INSERT                      03990000
         ICM   R1,B'0011',0(R2)   PICK UP THE LOGICAL RECORD LENGTH     04000000
         N     R1,=X'00007FFF'    CLEAR POSSIBLE CONTINUATION BIT       04010000
         ST    R1,RCBSLLRM        SET THE NEW REMAINDER                 04020000
         C     R1,=F'2'           AT LEAST 2 BYTES?                     04030000
         BL    ERRPARM            BRANCH IF NOT                         04040000
         B     TRKLR              AND CONTINUE LOGICAL RECORD TRACKING  04050000
                                                                        04060000
TRKSAVE1 DS    0H                                                       04070000
                                                                        04080000
         MVC   RCBSNDLL,0(R2)     SAVE THE 1ST BYTE OF THE LL           04090000
         MVC   RCBSLLRM,=F'-1'    SPECIAL INDICATION OF SPLIT LL        04100000
         B     SENDTYPE           AND COMPLETE THE SEND                 04110000
                                                                        04120000
TRKLONG  DS    0H                                                       04130000
                                                                        04140000
         SR    R1,R3              THIS MUCH MORE HAS BEEN SENT          04150000
         ST    R1,RCBSLLRM        SET THE NEW REMAINING LENGTH          04160000
         B     SENDTYPE           AND COMPLETE THE SEND                 04170000
                                                                        04180000
*                                                                       04190000
* COMPLETE THE SEND OPERATION AS SPECIFIED BY THE CURRENT SEND TYPE     04200000
*---------------------------------------------------------------------- 04210000
                                                                        04220000
SENDTYPE DS    0H                                                       04230000
                                                                        04240000
         CLC   RCBSTYPE,=A(CM_BUFFER_DATA)                              04250000
         BNE   SENDREAL           BRANCH IF WE WILL REALLY ISSUE SEND   04260000
         L     R3,ISE62SBF        SBUF CONTROL AREA                     04270000
X        USING SBFLIST,R3                                               04280000
         CLC   X.SBFBUFO,=A(CM_MAXIMUM_HOLD_LENGTH) IS THERE A LOT?     04290000
         DROP  X                                                        04300000
         BL    SENDRTSR           BRANCH IF NOT                         04310000
         B     FLUSH              GO SEND THE DATA                      04320000
                                                                        04330000
SENDREAL DS    0H                                                       04340000
                                                                        04350000
         CLC   RCBSTYPE,=A(CM_SEND_AND_FLUSH)                           04360000
         BE    FLUSH              BRANCH IF FLUSHING                    04370000
                                                                        04380000
         CLC   RCBCTYPE,=A(CM_MAPPED_CONVERSATION)                      04390000
         BE    FLUSH              BRANCH IF MAPPED CONVERSATION         04400000
                                                                        04410000
         CLC   RCBSTYPE,=A(CM_SEND_AND_DEALLOCATE)                      04420000
         BNE   SENDCKLL           NEED TO CHECK LL IF NOT DEALLOCATE    04430000
         CLC   RCBDEAL,=A(CM_DEALLOCATE_ABEND)                          04440000
         BE    FLUSH              NO NEED TO CHECK IF DEALLOCATE/ABEND  04450000
                                                                        04460000
SENDCKLL DS    0H                                                       04470000
                                                                        04480000
         OC    RCBSLLRM,RCBSLLRM  IS LAST LOGICAL RECORD COMPLETE?      04490000
         BNZ   ERRSTATE           BRANCH IF NOT                         04500000
         B     FLUSH                                                    04510000
                                                                        04520000
*                                                                       04530000
* DATA WILL ACTUALLY BE TRANSMITTED.  COMPLETE THE RH, SEND IT, & WAIT. 04540000
*---------------------------------------------------------------------- 04550000
                                                                        04560000
                                                                        04570000
FLUSH    DS    0H                                                       04580000
                                                                        04590000
         BAS   R14,SENDRH          ADD APPROPRIATE RH INDICATORS        04600000
         BAS   R14,SHIPIT          SEND OUT THE DATA                    04610000
         ST    R15,RETCODE         SAVE THE RETURN CODE                 04620000
         LTR   R15,R15             WAS SHIP SUCCESSFUL?                 04630000
         BNZ   ERRSHIP             BRANCH IF NOT                        04640000
                                                                        04650000
         BAS   R14,VTAMLOCK                                             04660000
                                                                        04670000
         $SESS $SESS_FIND_SESSION,                                     +04680000
               SESSION=RCBHSID,                                        +04690000
               ERRET=ERRSESS,                                          +04700000
               MF=(E,$SESSMFL)    LOCATE ASSOCIATED ISESS, IF ANY       04710000
                                                                        04720000
X        USING SPLIST,$SESSMFL                                          04730000
         L     RISESS,X.SPLAREA   ADDRESS OF ASSOCIATED ISESS BLOCK     04740000
         DROP  X                                                        04750000
                                                                        04760000
         TM    ISEF1,ISEF1TRM     SESS TERM STARTED?                    04770000
         BO    ERRSESS            BRANCH IF YES                         04780000
         TM    ISE62FL2,ISE62DRD  IS DRIVER DOWN?                       04790000
         BO    ERRSESS            BRANCH IF YES                         04800000
                                                                        04810000
         MVC   RCBCONVS,NXTSTATE   SET SUCCESSFUL SEND NEXT STATE       04820000
         B     SENDRTSR            AND BE GONE                          04830000
                                                                        04840000
*                                                                       04850000
* COMPLETE THE REQUEST-TO-SEND-RECEIVED VARIABLE                        04860000
*---------------------------------------------------------------------- 04870000
                                                                        04880000
SENDRTSR DS    0H                                                       04890000
                                                                        04900000
         MVC   RETRTSR,=A(CM_REQUEST_TO_SEND_NOT_RECEIVED)              04910000
         TM    ISE62FL1,ISE62SIG     WAS A SIGNAL RECEIVED?             04920000
         BNO   RETURN                ALL DONE IF NOT                    04930000
         NI    ISE62FL1,255-ISE62SIG CLEAR THE FLAG                     04940000
         MVC   RETRTSR,=A(CM_REQUEST_TO_SEND_RECEIVED)                  04950000
         B     RETURN                ALL DONE                           04960000
                                                                        04970000
*---------------------------------------------------------------------- 04980000
* EXCEPTION ROUTINES                                                    04990000
*---------------------------------------------------------------------- 05000000
                                                                        05010000
ERRPROD  DS    0H                                                       05020000
                                                                        05030000
         MVC   RETCODE,=A(CM_PRODUCT_SPECIFIC_ERROR)                    05040000
         B     RETURN                                                   05050000
                                                                        05060000
ERRSTATE DS    0H                                                       05070000
                                                                        05080000
         MVC   RETCODE,=A(CM_PROGRAM_STATE_CHECK)                       05090000
         B     RETURN                                                   05100000
                                                                        05110000
ERRPARM  DS    0H                                                       05120000
                                                                        05130000
         MVC   RETCODE,=A(CM_PROGRAM_PARAMETER_CHECK)                   05140000
         B     RETURN                                                   05150000
                                                                        05160000
ERRSESS  DS    0H                                                       05170000
                                                                        05180000
         MVC   RETCODE,=A(CM_RESOURCE_FAILURE_NO_RETRY)                 05190000
         B     ERRSHIP                                                  05200000
                                                                        05210000
ERRSHIP  DS    0H                                                       05220000
                                                                        05230000
         LA    R1,ESTAB                                                 05240000
         LA    R2,L'ESTABENT                                            05250000
         LA    R3,ESTABLST                                              05260000
                                                                        05270000
ESLOOP   DS    0H                                                       05280000
                                                                        05290000
         CLC   RETCODE,0(R1)          DOES RETCODE MATCH ENTRY?         05300000
         BE    ESFOUND                BRANCH IF YES                     05310000
         BXLE  R1,R2,ESLOOP           CHECK ALL TABLE ENTRIES           05320000
         B     RETURN                 JUST RETURN IF NOT IN TABLE       05330000
                                                                        05340000
ESFOUND  DS    0H                                                       05350000
                                                                        05360000
         ICM   R15,15,4(R1)           GET NEW STATE VALUE               05370000
         BP    ESGOOD                 BRANCH IF STATE IS OK             05380000
         EX    0,*                    KILL THE PROCESS                  05390000
                                                                        05400000
ESGOOD   DS    0H                                                       05410000
                                                                        05420000
         ST    R15,RCBCONVS           SET THE NEW STATE                 05430000
         C     R15,=A(CM_RESET_STATE) IS THE NEW STATE "RESET"          05440000
         BNE   RETURN                 BRANCH IF NOT                     05450000
         OI    FLAG,FLAGFREE          SET THE END CONVERSATION          05460000
         B     RETURN                 AND RETURN                        05470000
                                                                        05480000
ESTAB    DC    A(CM_CONVERSATION_TYPE_MISMATCH),A(CM_RESET_STATE)       05490000
ESTABENT EQU   ESTAB,*-ESTAB                                            05500000
         DC    A(CM_PIP_NOT_SPECIFIED_CORRECTLY),A(CM_RESET_STATE)      05510000
         DC    A(CM_SECURITY_NOT_VALID),A(CM_RESET_STATE)               05520000
         DC    A(CM_SYNC_LVL_NOT_SUPPORTED_PGM),A(CM_RESET_STATE)       05530000
         DC    A(CM_TPN_NOT_RECOGNIZED),A(CM_RESET_STATE)               05540000
         DC    A(CM_TP_NOT_AVAILABLE_NO_RETRY),A(CM_RESET_STATE)        05550000
         DC    A(CM_TP_NOT_AVAILABLE_RETRY),A(CM_RESET_STATE)           05560000
         DC    A(CM_DEALLOCATED_ABEND_TIMER),A(CM_RESET_STATE)          05570000
         DC    A(CM_DEALLOCATED_ABEND_SVC),A(CM_RESET_STATE)            05580000
         DC    A(CM_DEALLOCATED_ABEND),A(CM_RESET_STATE)                05590000
         DC    A(CM_RESOURCE_FAILURE_NO_RETRY),A(CM_RESET_STATE)        05600000
         DC    A(CM_RESOURCE_FAILURE_RETRY),A(CM_RESET_STATE)           05610000
         DC    A(CM_PROGRAM_ERROR_PURGING),A(CM_RECEIVE_STATE)          05620000
         DC    A(CM_SVC_ERROR_PURGING),A(CM_RECEIVE_STATE)              05630000
         DC    A(CM_TAKE_BACKOUT),A(-1)                                 05640000
         DC    A(CM_DEALLOCATED_ABEND_TIMER_BO),A(-1)                   05650000
         DC    A(CM_DEALLOCATED_ABEND_SVC_BO),A(-1)                     05660000
         DC    A(CM_DEALLOCATED_ABEND_BO),A(-1)                         05670000
         DC    A(CM_RESOURCE_FAIL_NO_RETRY_BO),A(-1)                    05680000
         DC    A(CM_RESOURCE_FAILURE_RETRY_BO),A(-1)                    05690000
ESTABLST EQU   *-L'ESTABENT                                             05700000
                                                                        05710000
*---------------------------------------------------------------------- 05720000
* EXIT TRACE AND RETURN TO CALLER                                       05730000
*---------------------------------------------------------------------- 05740000
                                                                        05750000
RETURN   DS    0H                                                       05760000
                                                                        05770000
         TM    FLAG,FLAGFREE          RELEASE THE SESSION?              05780000
         BNO   RETURNX                BRANCH IF NOT                     05790000
                                                                        05800000
         L62DLRC (RRCB),                                               +05810000
               L62RETCD,                                               +05820000
               MF=(E,L62MFL)          DELETE THE RCB & RELEASE          05830000
                                                                        05840000
RETURNX  DS    0H                                                       05850000
                                                                        05860000
         BAS   R14,VTAMUNLK           RELEASE THE LOCK IF NECESSARY     05870000
                                                                        05880000
         $TRACE *=A(TRC_CPIC_EXIT),48 TRACE ENTRY                       05890000
         BNZ   NOXTRACE               BRANCH IF TRACING NOT AVAILABLE   05900000
         MVC   0(8,R1),=CL8'ICPISEND' MODULE NAME                       05910000
         MVC   8(4,R1),RETCODE        RETURN_CODE VALUE                 05920000
         MVC   12(8,R1),CONVID        CONVERSATION ID                   05930000
         MVC   20(4,R1),CONVS         CONVERSATION STATE                05940000
         MVC   24(4,R1),LENGTH        SEND LENGTH                       05950000
         MVC   28(4,R1),BUFFER        SEND BUFFER ADDRESS               05960000
         CLC   RETCODE,=A(CM_OK)      SHOULD WE TRACE DATA?             05970000
         BNE   NOXTRACE               BRANCH IF NOT                     05980000
         ICM   R3,15,LENGTH           IS THERE DATA TO TRACE?           05990000
         BNP   NOXTRACE               BRANCH IF NOT                     06000000
         L     R2,BUFFER              START OF SEND DATA                06010000
         SR    R4,R4                  STARTING OFFSET                   06020000
XTRCDATA DS    0H                                                       06030000
         $TRACE *=A(TRC_CPIC_SEND_DATA),144 SEND DATA TRACE             06040000
         BNZ   NOXTRACE               BRANCH IF TRACING NOT AVAILABLE   06050000
         MVC   0(8,R1),CONVID         CONVERSATION ID                   06060000
         MVC   8(4,R1),=F'128'        SET MAX TRACE DATA LENGTH         06070000
         C     R3,=F'128'             AT LEAST 128 TO GO?               06080000
         BNL   *+8                    BRANCH IF YES                     06090000
         ST    R3,8(,R1)              SET ACTUAL DATA LENGTH REMAINING  06100000
         ST    R4,12(,R1)             SET STARTING OFFSET IN BUFFER     06110000
         LA    R14,16(,R1)            ADDRESS OF SEND DATA AREA         06120000
         LA    R15,128                MAX OF 128 BYTES                  06130000
         MVCL  R14,R2                 TRACE THE RECEIVED DATA           06140000
         LA    R4,128(,R4)            UPDATE DATA OFFSET                06150000
         LTR   R3,R3                  MORE DATA TO TRACE?               06160000
         BP    XTRCDATA               BRANCH IF YES                     06170000
NOXTRACE DS    0H                                                       06180000
                                                                        06190000
         L     R1,CMLPARM4        ADDRESS OF RETURN_CODE AREA           06200000
         MVC   0(4,R1),RETRTSR    SET REQUEST_TO_SEND_RECEIVED VARIABLE 06210000
                                                                        06220000
         L     R1,CMLPARM5        ADDRESS OF RETURN_CODE AREA           06230000
         MVC   0(4,R1),RETCODE    SET RETURN_CODE VARIABLE              06240000
                                                                        06250000
         SR    R15,R15            FUNCTION RETURN CODE = 0              06260000
         CEXIT RC=(R15),INDEP=YES RETURN                                06270000
                                                                        06280000
*---------------------------------------------------------------------- 06290000
* SUBROUTINE SBUFBUMP: INCREASE THE SIZE OF THE SBUF                    06300000
*                                                                       06310000
* ENTRY:  R1 = SBFLIST ADDRESS                                          06320000
*                                                                       06330000
* RETURN: ALL REGISTERS ARE RESTORED.                                   06340000
*---------------------------------------------------------------------- 06350000
                                                                        06360000
SBUFBUMP DS    0H                                                       06370000
                                                                        06380000
         STM   R14,R2,SUB0SAVE    SAVE REGISTERS                        06390000
         LR    R2,R1              SBFLIST ADDRESS                       06400000
                                                                        06410000
         SBUF  OBTAIN,                                                 +06420000
               OWNER=*ISEITASK,                                        +06430000
               ERRET=ERRSBUF,                                          +06440000
               MF=(E,(R2))                                              06450000
                                                                        06460000
         LM    R14,R2,SUB0SAVE    RELOAD REGISTER                       06470000
         BR    R14                RETURN                                06480000
                                                                        06490000
*---------------------------------------------------------------------- 06500000
* SUBROUTINE SENDRH: ADD APPROPRIATE RH BITS TO SEND RH BUILD AREA      06510000
*---------------------------------------------------------------------- 06520000
                                                                        06530000
SENDRH   DS    0H                                                       06540000
                                                                        06550000
         MVC   NXTSTATE,=A(CM_SEND_STATE)                               06560000
                                                                        06570000
         CLI   ISE62FSC,ISE62FSC_BETC ARE WE IN-CHAIN?                  06580000
         BNE   SENDNOBC               BRANCH IF YES                     06590000
         OI    ISE62RH0,RHBCI         SET BEGIN CHAIN                   06600000
                                                                        06610000
         CLI   ISE62FBR,ISE62FBR_BETB ARE WE IN-BRACKETS?               06620000
         BNE   SENDNOBC               BRANCH IF YES                     06630000
         OI    ISE62RH2,RHBBI         SET BEGIN BRACKET                 06640000
                                                                        06650000
SENDNOBC DS    0H                                                       06660000
                                                                        06670000
         CLC   RCBSTYPE,=A(CM_SEND_AND_CONFIRM)                         06680000
         BNE   SENDNCFM           BRANCH IF NOT CONFIRM                 06690000
         OI    ISE62RH0,RHECI     SET END CHAIN                         06700000
         B     CONFIRM            AND SET FOR CONFIRM                   06710000
SENDNCFM DS    0H                                                       06720000
                                                                        06730000
         CLC   RCBSTYPE,=A(CM_SEND_AND_PREP_TO_RECEIVE)                 06740000
         BNE   SENDNPTR           BRANCH IF NOT PREPARE TO RECEIVE      06750000
         OI    ISE62RH0,RHECI     SET END CHAIN                         06760000
         OI    ISE62RH2,RHCDI     PASS THE CD BIT                       06770000
         MVC   NXTSTATE,=A(CM_RECEIVE_STATE)                            06780000
         CLC   RCBPTR,=A(CM_PREP_TO_RECEIVE_FLUSH)                      06790000
         BE    SENDEXR1           USE EXCEPTION RESPONSE FOR FLUSH      06800000
         CLC   RCBPTR,=A(CM_PREP_TO_RECEIVE_CONFIRM)                    06810000
         BE    CONFIRM            AND SET FOR CONFIRM                   06820000
         CLC   RCBSYNCL,=A(CM_NONE)                                     06830000
         BE    SENDEXR1           USE EXCEPTION RESPONSE FOR FLUSH      06840000
         CLC   RCBSYNCL,=A(CM_CONFIRM)                                  06850000
         BE    CONFIRM            SET FOR CONFIRM                       06860000
         CLC   RCBSYNCL,=A(CM_SYNC_POINT)                               06870000
         EX    R0,*               NOT SUPPORTED YET ******************  06880000
SENDNPTR DS    0H                                                       06890000
                                                                        06900000
         CLC   RCBSTYPE,=A(CM_SEND_AND_DEALLOCATE)                      06910000
         BNER  R14                RETURN                                06920000
         OI    ISE62RH0,RHECI     SET END CHAIN                         06930000
         OI    ISE62RH2,RHCEBI    SET CONDITIONAL END BRACKET           06940000
         MVC   NXTSTATE,=A(CM_RESET_STATE)                              06950000
         OI    FLAG,FLAGFREE      RELEASE THE SESSION                   06960000
         CLC   RCBDEAL,=A(CM_DEALLOCATE_FLUSH)                          06970000
         BE    SENDEXR1           USE EXCEPTION RESPONSE FOR FLUSH      06980000
         CLC   RCBDEAL,=A(CM_DEALLOCATE_CONFIRM)                        06990000
         BE    CONFIRM            USE DR2 FOR CONFIRM                   07000000
         CLC   RCBDEAL,=A(CM_DEALLOCATE_ABEND)                          07010000
         BE    SENDDR1            USE DR1 FOR ABEND                     07020000
         CLC   RCBSYNCL,=A(CM_NONE)                                     07030000
         BE    SENDEXR1           USE EX RESPONSE FOR SYNC LEVEL NONE   07040000
         CLC   RCBSYNCL,=A(CM_CONFIRM)                                  07050000
         BE    CONFIRM            USE DR2 FOR SYNC LEVEL CONFIRM        07060000
         CLC   RCBSYNCL,=A(CM_SYNC_POINT)                               07070000
         EX    R0,*               NOT SUPPORTED YET ******************  07080000
                                                                        07090000
CONFIRM  DS    0H                                                       07100000
                                                                        07110000
         OI    ISE62RH1,RHDR1     ASK FOR DR3                           07120000
         OI    ISE62RH1,RHDR2     ASK FOR DR3                           07130000
         NI    ISE62RH1,255-RHERI ASK FOR DR3                           07140000
         BR    R14                AND RETURN                            07150000
                                                                        07160000
SENDEXR1 DS    0H                                                       07170000
                                                                        07180000
         OI    ISE62RH1,RHDR1       ASK FOR ER1                         07190000
         OI    ISE62RH1,RHERI       ASK FOR ER1                         07200000
         NI    ISE62RH1,255-RHDR2   ASK FOR ER1                         07210000
         BR    R14                  AND RETURN                          07220000
                                                                        07230000
SENDDR1  DS    0H                                                       07240000
                                                                        07250000
         OI    ISE62RH1,RHDR1       ASK FOR DR1                         07260000
         NI    ISE62RH1,255-RHDR2   ASK FOR DR1                         07270000
         NI    ISE62RH1,255-RHERI   ASK FOR DR1                         07280000
         BR    R14                  AND RETURN                          07290000
                                                                        07300000
*---------------------------------------------------------------------- 07310000
* SUBROUTINE SHIPIT: TRIGGER THE SESSION DRIVER TO SEND CURRENT BUFFER  07320000
*                    AND WAIT FOR COMPLETION OF SEND.                   07330000
*                                                                       07340000
* RETURN: R15 = POST CODE FROM SHIP REQUEST                             07350000
*---------------------------------------------------------------------- 07360000
                                                                        07370000
SHIPIT   DS    0H                                                       07380000
                                                                        07390000
         STM   R14,R3,SUB1SAVE    SAVE REGISTERS                        07400000
                                                                        07410000
*                                                                       07420000
* ALLOCATE A CPIC REQUEST WORK ELEMENT                                  07430000
*---------------------------------------------------------------------- 07440000
                                                                        07450000
         $VTAMWE L'IWEXX,         SIZE                                 +07460000
               IWECSHIP           CODE                                  07470000
                                                                        07480000
         LR    R3,R1              ESTABLISH ADDRESSABILITY              07490000
                                                                        07500000
*                                                                       07510000
* ALLOCATE AN XEPB                                                      07520000
*---------------------------------------------------------------------- 07530000
                                                                        07540000
         $TASK SETEPB,            INITIALIZE EPB FOR SYNCH REQUEST     +07550000
               ECODE=EC$SHIP,     EVENT CODE                           +07560000
               ERRET=ERR$TASK,                                         +07570000
               MF=(E,$TASKMFL)                                          07580000
                                                                        07590000
         ST    R1,SAVEEPB         SAVE THE XEPB ADDRESS                 07600000
                                                                        07610000
*                                                                       07620000
* FILL IN THE CPIC SHIP REQUEST WORK ELEMENT                            07630000
*---------------------------------------------------------------------- 07640000
                                                                        07650000
         USING IWEVTAM,R3                                               07660000
         MVC   IWEXXENT,TKBTCBID  ENTITY TOKEN                          07670000
         MVC   IWEXXEPB,SAVEEPB   EPB ADDRESS                           07680000
         ST    RRCB,IWEXXRCB      RCB ADDRESS                           07690000
         DROP  R3                                                       07700000
                                                                        07710000
*                                                                       07720000
* QUEUE THE CPIC SHIP REQUEST WORK ELEMENT TO THE SESSION QUEUE         07730000
*---------------------------------------------------------------------- 07740000
                                                                        07750000
         $VTAMQ (R3),             WORK ELEMENT                         +07760000
               ISEWEQ             QUEUE                                 07770000
                                                                        07780000
*                                                                       07790000
* RELEASE SERIALIZATION & WAIT FOR POSTING OF THE CPIC SHIP REQUEST     07800000
*---------------------------------------------------------------------- 07810000
                                                                        07820000
         BAS   R14,VTAMUNLK       RELEASE LOCK                          07830000
                                                                        07840000
         $TASK WAIT,              WAIT FOR REQUEST COMPLETION          +07850000
               EPB=*SAVEEPB,      XEPB ADDRESS                         +07860000
               MF=(E,$TASKMFL)                                          07870000
                                                                        07880000
         ST    R0,SUB1SAVE+4      POST CODE (R0) IS RETURNED IN R15     07890000
         LM    R14,R3,SUB1SAVE    RELOAD REGISTER                       07900000
         BR    R14                RETURN                                07910000
                                                                        07920000
*---------------------------------------------------------------------- 07930000
*   SUBROUTINE: OBTAIN VTAM GLOBAL LOCK                                 07940000
*---------------------------------------------------------------------- 07950000
                                                                        07960000
VTAMLOCK DS    0H                                                       07970000
                                                                        07980000
         TM    FLAG,FLAGLOCK        WAS THE LOCK ALREADY OBTAINED?      07990000
         BOR   R14                  RETURN IF YES                       08000000
         STM   R14,R2,SUB0SAVE      SAVE CALLER'S REGISTERS             08010000
                                                                        08020000
         $SER  OBTAIN,                                                 +08030000
               VTAM                                                     08040000
                                                                        08050000
         C     R15,=F'4'            WAS LOCK ALREADY HELD?              08060000
         BNE   VTAMLOEX             BRANCH IF NOT                       08070000
         OI    FLAG,FLAGLCKD        REMEMBER LOCK HELD ON ENTRY         08080000
                                                                        08090000
VTAMLOEX DS    0H                                                       08100000
                                                                        08110000
         OI    FLAG,FLAGLOCK        REMEMBER LOCK IS HELD               08120000
         LM    R14,R2,SUB0SAVE      RESTORE CALLER'S REGISTERS          08130000
         BR    R14                  RETURN                              08140000
                                                                        08150000
*---------------------------------------------------------------------- 08160000
*   SUBROUTINE: RELEASE VTAM GLOBAL LOCK                                08170000
*---------------------------------------------------------------------- 08180000
                                                                        08190000
VTAMUNLK DS    0H                                                       08200000
                                                                        08210000
         TM    FLAG,FLAGLOCK        IS LOCK HELD?                       08220000
         BNOR  R14                  BRANCH IF NOT                       08230000
         TM    FLAG,FLAGLCKD        WAS LOCK HELD ON ENTRY?             08240000
         BOR   R14                  DON'T RELEASE IF IT WAS             08250000
         STM   R14,R2,SUB0SAVE      SAVE CALLER'S REGISTERS             08260000
                                                                        08270000
         $SER  RELEASE,                                                +08280000
               VTAM                                                     08290000
                                                                        08300000
         NI    FLAG,255-FLAGLOCK    SHOW LOCK NOT HELD                  08310000
         LM    R14,R2,SUB0SAVE      RESTORE CALLER'S REGISTERS          08320000
         BR    R14                  RETURN                              08330000
                                                                        08340000
*---------------------------------------------------------------------- 08350000
* ERROR ROUTINES                                                        08360000
*---------------------------------------------------------------------- 08370000
                                                                        08380000
ERR$TASK DS    0H                                                       08390000
                                                                        08400000
         $ABEND ABE_VTDIAG,                                            +08410000
               SCOPE=PCB,                                              +08420000
               TITLE='$TASK FAILURE'                                    08430000
                                                                        08440000
ERRSBUF  DS    0H                                                       08450000
                                                                        08460000
         $ABEND ABE_VTDIAG,                                            +08470000
               SCOPE=PCB,                                              +08480000
               TITLE='SBUF FAILURE'                                     08490000
                                                                        08500000
*---------------------------------------------------------------------- 08510000
* LITERALS AND CONSTANTS                                                08520000
*---------------------------------------------------------------------- 08530000
                                                                        08540000
         LTORG ,                                                        08550000
                                                                        08560000
         PRINT NOGEN                                                    08570000
         ISTDBIND ,               VTAM BIND IMAGE                       08580000
         ISTRH ,                  VTAM SNA REQUEST HEADER               08590000
         IHAPSA ,                 MVS PREFIXED SAVE AREA                08600000
         IKJTCB ,                 MVS TASK CONTROL BLOCK                08610000
         TRACODES ,               INTEGRATOR TRACE CODE EQUATES         08620000
         ICVT  ,                  INTEGRATOR CVT                        08630000
         IVTAMCVT ,               INTEGRATOR VTAM CVT                   08640000
         ITASK ,                  INTEGRATOR TASK BLOCK                 08650000
         IPCB ,                   INTEGRATOR PROCESS BLOCK              08660000
         IACB ,                   INTEGRATOR VTAM ACB                   08670000
         ABCODES ,                INTEGRATOR $ABEND CODES               08680000
         EVCODES ,                INTEGRATOR EVENT CODES                08690000
         ISESS ,                  INTEGRATOR SESSION BLOCK              08700000
         IVUSER ,                 INTEGRATOR VTAM USER BLOCK            08710000
         IRPL ,                   INTEGRATOR VTAM RPL                   08720000
         IWEVTAM ,                INTEGRATOR VTAM WORK ELEMENT          08730000
         $TASK DSECT=YES          INTEGRATOR $TASK SERVICES             08740000
         $VTAM DSECT=YES          INTEGRATOR $VTAM SERVICES             08750000
         $SESS DSECT=YES          INTEGRATOR $SESS SERVICES             08760000
         SBUF  DSECT=YES          INTEGRATOR SBUF  SERVICES             08770000
         END   ,                                                        08780000
